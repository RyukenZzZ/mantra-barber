/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as HistoryBookingsImport } from './routes/history-bookings'
import { Route as CreateBookingImport } from './routes/create-booking'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as ProfileEditImport } from './routes/profile/edit'
import { Route as PaymentsIdImport } from './routes/payments/$id'
import { Route as AdminServicesImport } from './routes/admin/services'
import { Route as AdminReportsImport } from './routes/admin/reports'
import { Route as AdminProductsImport } from './routes/admin/products'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminBookingsImport } from './routes/admin/bookings'
import { Route as AdminBarbersImport } from './routes/admin/barbers'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HistoryBookingsRoute = HistoryBookingsImport.update({
  id: '/history-bookings',
  path: '/history-bookings',
  getParentRoute: () => rootRoute,
} as any)

const CreateBookingRoute = CreateBookingImport.update({
  id: '/create-booking',
  path: '/create-booking',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileEditRoute = ProfileEditImport.update({
  id: '/profile/edit',
  path: '/profile/edit',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsIdRoute = PaymentsIdImport.update({
  id: '/payments/$id',
  path: '/payments/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminServicesRoute = AdminServicesImport.update({
  id: '/admin/services',
  path: '/admin/services',
  getParentRoute: () => rootRoute,
} as any)

const AdminReportsRoute = AdminReportsImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsRoute = AdminProductsImport.update({
  id: '/admin/products',
  path: '/admin/products',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminBookingsRoute = AdminBookingsImport.update({
  id: '/admin/bookings',
  path: '/admin/bookings',
  getParentRoute: () => rootRoute,
} as any)

const AdminBarbersRoute = AdminBarbersImport.update({
  id: '/admin/barbers',
  path: '/admin/barbers',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-booking': {
      id: '/create-booking'
      path: '/create-booking'
      fullPath: '/create-booking'
      preLoaderRoute: typeof CreateBookingImport
      parentRoute: typeof rootRoute
    }
    '/history-bookings': {
      id: '/history-bookings'
      path: '/history-bookings'
      fullPath: '/history-bookings'
      preLoaderRoute: typeof HistoryBookingsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/admin/barbers': {
      id: '/admin/barbers'
      path: '/admin/barbers'
      fullPath: '/admin/barbers'
      preLoaderRoute: typeof AdminBarbersImport
      parentRoute: typeof rootRoute
    }
    '/admin/bookings': {
      id: '/admin/bookings'
      path: '/admin/bookings'
      fullPath: '/admin/bookings'
      preLoaderRoute: typeof AdminBookingsImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/products': {
      id: '/admin/products'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsImport
      parentRoute: typeof rootRoute
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsImport
      parentRoute: typeof rootRoute
    }
    '/admin/services': {
      id: '/admin/services'
      path: '/admin/services'
      fullPath: '/admin/services'
      preLoaderRoute: typeof AdminServicesImport
      parentRoute: typeof rootRoute
    }
    '/payments/$id': {
      id: '/payments/$id'
      path: '/payments/$id'
      fullPath: '/payments/$id'
      preLoaderRoute: typeof PaymentsIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/edit': {
      id: '/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof ProfileEditImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-booking': typeof CreateBookingRoute
  '/history-bookings': typeof HistoryBookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/barbers': typeof AdminBarbersRoute
  '/admin/bookings': typeof AdminBookingsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/services': typeof AdminServicesRoute
  '/payments/$id': typeof PaymentsIdRoute
  '/profile/edit': typeof ProfileEditRoute
  '/profile': typeof ProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-booking': typeof CreateBookingRoute
  '/history-bookings': typeof HistoryBookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/barbers': typeof AdminBarbersRoute
  '/admin/bookings': typeof AdminBookingsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/services': typeof AdminServicesRoute
  '/payments/$id': typeof PaymentsIdRoute
  '/profile/edit': typeof ProfileEditRoute
  '/profile': typeof ProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-booking': typeof CreateBookingRoute
  '/history-bookings': typeof HistoryBookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin/barbers': typeof AdminBarbersRoute
  '/admin/bookings': typeof AdminBookingsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/services': typeof AdminServicesRoute
  '/payments/$id': typeof PaymentsIdRoute
  '/profile/edit': typeof ProfileEditRoute
  '/profile/': typeof ProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-booking'
    | '/history-bookings'
    | '/login'
    | '/register'
    | '/admin/barbers'
    | '/admin/bookings'
    | '/admin/dashboard'
    | '/admin/products'
    | '/admin/reports'
    | '/admin/services'
    | '/payments/$id'
    | '/profile/edit'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-booking'
    | '/history-bookings'
    | '/login'
    | '/register'
    | '/admin/barbers'
    | '/admin/bookings'
    | '/admin/dashboard'
    | '/admin/products'
    | '/admin/reports'
    | '/admin/services'
    | '/payments/$id'
    | '/profile/edit'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/create-booking'
    | '/history-bookings'
    | '/login'
    | '/register'
    | '/admin/barbers'
    | '/admin/bookings'
    | '/admin/dashboard'
    | '/admin/products'
    | '/admin/reports'
    | '/admin/services'
    | '/payments/$id'
    | '/profile/edit'
    | '/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateBookingRoute: typeof CreateBookingRoute
  HistoryBookingsRoute: typeof HistoryBookingsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  AdminBarbersRoute: typeof AdminBarbersRoute
  AdminBookingsRoute: typeof AdminBookingsRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminProductsRoute: typeof AdminProductsRoute
  AdminReportsRoute: typeof AdminReportsRoute
  AdminServicesRoute: typeof AdminServicesRoute
  PaymentsIdRoute: typeof PaymentsIdRoute
  ProfileEditRoute: typeof ProfileEditRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateBookingRoute: CreateBookingRoute,
  HistoryBookingsRoute: HistoryBookingsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AdminBarbersRoute: AdminBarbersRoute,
  AdminBookingsRoute: AdminBookingsRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminProductsRoute: AdminProductsRoute,
  AdminReportsRoute: AdminReportsRoute,
  AdminServicesRoute: AdminServicesRoute,
  PaymentsIdRoute: PaymentsIdRoute,
  ProfileEditRoute: ProfileEditRoute,
  ProfileIndexRoute: ProfileIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/create-booking",
        "/history-bookings",
        "/login",
        "/register",
        "/admin/barbers",
        "/admin/bookings",
        "/admin/dashboard",
        "/admin/products",
        "/admin/reports",
        "/admin/services",
        "/payments/$id",
        "/profile/edit",
        "/profile/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/create-booking": {
      "filePath": "create-booking.jsx"
    },
    "/history-bookings": {
      "filePath": "history-bookings.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/register": {
      "filePath": "register.jsx"
    },
    "/admin/barbers": {
      "filePath": "admin/barbers.jsx"
    },
    "/admin/bookings": {
      "filePath": "admin/bookings.jsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.jsx"
    },
    "/admin/products": {
      "filePath": "admin/products.jsx"
    },
    "/admin/reports": {
      "filePath": "admin/reports.jsx"
    },
    "/admin/services": {
      "filePath": "admin/services.jsx"
    },
    "/payments/$id": {
      "filePath": "payments/$id.jsx"
    },
    "/profile/edit": {
      "filePath": "profile/edit.jsx"
    },
    "/profile/": {
      "filePath": "profile/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
